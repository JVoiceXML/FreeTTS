# Copyright 2001 Sun Microsystems, Inc.
# All Rights Reserved.  Use is subject to license terms.
# 
# See the file "license.terms" for information on usage and
# redistribution of this file, and for a DISCLAIMER OF ALL 
# WARRANTIES.
#

# Developers should not need to modify this file.
# 
# This file has general rules for building things. It should work both
# under UNIX and DOS. 
#

ifeq (${TOP},)
TOP = .
endif

# here is some info used by JAVADOC
JAVADOC = $(JAVA_HOME)/bin/javadoc
JAR = $(JAVA_HOME)/bin/jar
TAR = tar
GZIP = gzip

# javadoc jdk1.4 beta2 -source 1.4 switch seems to be broken
# so temporarily use the beta1  javadoc

# JAVADOC =  $(JAVA_HOME)/../j2sdk1.4.0beta1/bin/javadoc
JAVADOC =  $(JAVA_HOME)/bin/javadoc
JAVA_PACKAGES = \
		com.sun.speech.engine \
		com.sun.speech.engine.synthesis \
		com.sun.speech.engine.synthesis.text \
		com.sun.speech.freetts \
		com.sun.speech.freetts.jsapi \
		com.sun.speech.freetts.en \
		com.sun.speech.freetts.en.us \
	        com.sun.speech.freetts.audio \
	        com.sun.speech.freetts.cart \
	        com.sun.speech.freetts.clunits \
	        com.sun.speech.freetts.diphone \
	        com.sun.speech.freetts.lexicon \
	        com.sun.speech.freetts.relp \
	        com.sun.speech.freetts.util \
	        # javax.speech \
	        # javax.speech.synthesis \
	        # javax.speech.recognition \



DOC_DEST = /lab/speech/web/freetts


ifeq ($(COMSPEC),)
include ${TOP}/build/Config.unix 
else 
include ${TOP}/build/Config.dos
endif 


ifeq ($(EXTRA_LIB),)
EXTRA_LIB=${TOP}/lib
endif

ifeq ($(EXTRA_JARS), )
EXTRA_JARS = $(EXTRA_LIB)/demo.jar$(CSEP)$(EXTRA_LIB)/jsapi.jar$(CSEP)$(EXTRA_LIB)/freetts.jar$(CSEP)$(EXTRA_LIB)/cmuawb.jar$(CSEP)$(EXTRA_LIB)/cmukal16.jar$(CSEP)$(EXTRA_LIB)/cmukal8.jar$(CSEP)$(EXTRA_LIB)/cmulex.jar$(CSEP)$(EXTRA_LIB)/cmutimelex.jar
endif

# Allow a Makefile.config that includes this Makefile.config to
# define a LOCAL_LIB_PATHS environment variable for other libs
# it may need for compiling.
#
ifeq ($(LOCAL_LIB_PATHS),)
COMMON_LIB_PATHS=${JUNIT_HOME}/junit.jar
else
COMMON_LIB_PATHS=${JUNIT_HOME}/junit.jar$(CSEP)$(LOCAL_LIB_PATHS)
endif

# Check if $CLASSPATH exists. If it does, added it to the -cp option
# of Java.
ifeq ($(CLASSPATH),)
JAVA_CP=$(COMMON_LIB_PATHS)$(CSEP)${CLASS_DEST_DIR}$(CSEP)$(EXTRA_JARS)
else
JAVA_CP=${CLASSPATH}$(CSEP)$(COMMON_LIB_PATHS)$(CSEP)${CLASS_DEST_DIR}$(CSEP)$(EXTRA_JARS)
endif 


##############################################################################
# Shouldn't need to change below this line 
##############################################################################

.SUFFIXES: .java .class .html .c .o .stub .jj .jjt

.PHONY: all clean docs

# Flags for javac and javadoc
FLAGS = -classpath "$(subst ;,$(CSEP),$(subst /,$(PATH_SEP),.;${CLASS_DEST_DIR};${COMMON_LIB_PATHS};${TOP};${EXTRA_JARS}))" -source 1.4

# Flags for javac
JAVAC_FLAGS = ${FLAGS} $(EXTRA_JAVAC_FLAGS) -d ${CLASS_DEST_DIR}

# Flags for javadoc
JAVADOC_FLAGS = ${FLAGS} -breakiterator -d ${DOC_DEST}

JAVA_FLAGS = -Xmx512m -ea
JAVA_CMD = $(JAVA_HOME)/bin/java $(JAVA_FLAGS) $(EXTRA_JAVA_FLAGS) \
	-cp '$(JAVA_CP)'

# Rule to build class files
${CLASS_DEST_DIR}/${PACKAGE_PATH}/%.class: %.java
	@(if test \( ! -d ${CLASS_DEST_DIR} \) ; then  mkdir -p ${CLASS_DEST_DIR} ; fi)
	${JAVA_HOME}/bin/javac ${JAVAC_FLAGS} $<

${CLASS_DEST_DIR}/%.class: %.java
	@(if test \( ! -d ${CLASS_DEST_DIR} \) ; then  mkdir -p ${CLASS_DEST_DIR} ; fi)
	${JAVA_HOME}/bin/javac ${JAVAC_FLAGS} $<

%.class: %.java
	@(if test \( ! -d ${CLASS_DEST_DIR} \) ; then  mkdir -p ${CLASS_DEST_DIR} ; fi)
	${JAVA_HOME}/bin/javac ${JAVAC_FLAGS} $<

# Rule to copy image files
${CLASS_DEST_DIR}/${PACKAGE_PATH}/%.gif: %.gif
	mkdir -p ${CLASS_DEST_DIR}/${PACKAGE_PATH}
	cp $? ${CLASS_DEST_DIR}/${PACKAGE_PATH}
	chmod +w ${CLASS_DEST_DIR}/${PACKAGE_PATH}/$?

# Rule to copy audio files
${CLASS_DEST_DIR}/${PACKAGE_PATH}/%.au: %.au
	mkdir -p ${CLASS_DEST_DIR}/${PACKAGE_PATH}
	cp $? ${CLASS_DEST_DIR}/${PACKAGE_PATH}
	chmod +w ${CLASS_DEST_DIR}/${PACKAGE_PATH}/$?

# Rule to build javadocs
${DOCS_DIR}/$(subst /,.,$(PACKAGE_PATH))%.html: %.java
	${JAVA_HOME}/bin/javadoc ${JAVADOC_FLAGS} $<

# Rule to build RMI stubs and skeletons
PACKAGE = $(subst /,., $(PACKAGE_PATH))
%.stub: ${CLASS_DEST_DIR}/${PACKAGE_PATH}/%.class
	${JAVA_HOME}/bin/rmic ${JAVAC_FLAGS} ${STUB_DEST} ${PACKAGE}.${@:.stub=}
	touch $@

default: classes all

classes::
#	mkdir -p  ${CLASS_DEST_DIR}
	@(if test \( ! -d ${CLASS_DEST_DIR} \) ; then  mkdir -p ${CLASS_DEST_DIR} ; fi)

all::
	@for subdir in $(SUBDIRS) XXX ; do \
		if [ "$$subdir" != "XXX" ]; then \
			(echo "Building in $$subdir" ; cd $$subdir && $(MAKE) $(MAKEDEFS) $@) || (echo "Skipping $$subdir");\
		fi \
	done

${CLASS_DEST_DIR}::
	@(if test \( ! -d ${CLASS_DEST_DIR} \) ; then  mkdir -p ${CLASS_DEST_DIR} ; fi)

${DOCS_DIR}::
	@(if test \( ! -d ${DOCS_DIR} \) ; then  mkdir -p ${DOCS_DIR} ; fi)

force:
	${JAVA_HOME}/bin/javac ${FLAGS} ${FILES}


clean::
	@for subdir in $(SUBDIRS) XXX ; do \
		if [ "$$subdir" != "XXX" ]; then \
			(echo "Cleaning in $$subdir" ; cd $$subdir && $(MAKE) $(MAKEDEFS) $@) || (echo "Skipping $$subdir");\
		fi \
	done



tests:: all
	$(JAVA_CMD) $(TEST_SUITE)

quicktests::  
	$(JAVA_CMD) $(TEST_SUITE)

guitests:: all
	$(JAVA_CMD) $(GUI_TEST_SUITE)

docs:
	-rm -rf $(DOC_DEST)
	-mkdir -p $(DOC_DEST)
	-cp $(TOP)/license.terms $(DOC_DEST)
	-cp $(TOP)/acknowledgments.txt $(DOC_DEST)
	$(JAVADOC) $(JAVADOC_FLAGS) \
		-overview $(TOP)/overview.html \
		-windowtitle "FreeTTS" \
		-bottom 'See the <a href="{@docRoot}/license.terms">license terms</a> and <a href="{@docRoot}/acknowledgments.txt">acknowledgments</a>.<br>Copyright 1996-2001 Sun Microsystems, Inc.  All Rights Reserved.  Use is subject to license terms.' \
		-group "JSAPI 1.0 Specification" "javax.speech*" \
		-group "Support for JSAPI 1.0" "com.sun.speech.engine*" \
		-group "FreeTTS 1.0 Implementation" "com.sun.speech.freetts*" \
		-sourcepath $(TOP) $(JAVA_PACKAGES) | grep -v Generating
