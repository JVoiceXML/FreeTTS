Copyright 2001 Sun Microsystems, Inc.

See the file "license.terms" for information on usage and redistribution of
this file, and for a DISCLAIMER OF ALL WARRANTIES.

This directory contains the necessary files for converting FestVox voices
for FreeTTS.


--------- Creating a Voice ---------

The voices must first be created by FestVox.  Please refer to the FestVox
documentation for full information.  (http://festvox.org,
http://festvox.org/bsv/) Section IV.19 provides a good tutorial on making a US
Diphone voice, and Section II.5.6 provides a good tutorial on recording a
cluster unit voice for the limited domain of telling the time.  Section II.5
provides a good general explaination of creating a limited domain voice in
general.  If you want to experiment with voice creation and conversion,
creating a time telling voice is a good place to begin.

In our experience, FestVox and Festival work better under Linux x86 platforms.


--------- Importing a FestVox Voice into FreeTTS (quick explaination) ---------

* Make sure festival, java, and javac are in your path.
* Define the ESTDIR environment variable.
* Execute <FreeTTSdir>/tools/FestVoxToFreeTTS/FestVoxToFreeTTS.sh <voicedir>
* You have now imported a voice into FreeTTS.


--------- Importing a FestVox Voice into FreeTTS (full explaination) ---------

FreeTTS follow many of the same steps that Flite
(http://www.speech.cs.cmu.edu/flite) does for importing voices.  For a more
detailed description of the process, please read Section 8 of the Flite
documentation (http://www.speech.cs.cmu.edu/flite/doc/index.html).

To import a voice into FreeTTS, you first need to do the following things:
1. Compile Festival (http://festvox.org/) as well as the speech tools that
    come with Festival.  Refer to the Festival documentation for details
    of setting this up on your system.
2. You must have Java and a Java Compiler installed on your system.
    See http://java.sun.com if you do not already have this.
    Java version 1.4.2 is known to work.
3. "festival", "java", and "javac" must be in your path.  For example, I used
    the following command under bash (modify appropriately):
    "export PATH=$PATH:/usr/java/j2sdk1.4.2/bin:\
     /home/dv144877/festival/bin/"
4. You must set the ESTDIR environment variable to point to the speech tools.
    e.g. "export ESTDIR=/home/dv144877/speech_tools"

To convert a voice, run:
FestVoxToFreeTTS.sh <voicedir>
where <voicedir> is the directory the FestVox voice resides in.  The contents
of <voicedir> will looks something like:
bin/  etc/       FreeTTS/  lpc/     prompt-cep/  recording/  wav/
cep/  f0/        group/    mcep/    prompt-lab/  scratch/    wavn/
dic/  festival/  lab/      pm/      prompt-utt/  sts/        wrd/
emu/  festvox/   lar/      pm_lab/  prompt-wav/  versions/

The script will automatically detect whether it is a cluster unit voice or a
diphone voice by looking at the <voicedir>/etc/voice.defs file.  If no such
file exists, you will need to create it.  An example for a time-telling voice
would be something like:
FV_INST=sun
FV_LANG=time
FV_NAME=dtv
FV_TYPE=ldom
FV_VOICENAME=$FV_INST"_"$FV_LANG"_"$FV_NAME
FV_FULLVOICENAME=$FV_VOICENAME"_"$FV_TYPE

If possible, you can let festival automatically generate this for you.  Try
<festvoxdir>/src/general/guess_voice_defs

FreeTTS will create a new directory <voicdir>/FreeTTS/   In that directory is
the text which contains all the data for the voice (along with a few other
intermediate files).  The voice file will have a name like sun_time_dtv.txt

The various stages of the conversion process can be called directly by passing
a second argument to FestVoxToFreeTTS.sh such as "sts" or "mcep".  These should
be used carefully.  More information on these stages can be found in the Flite
documentation.

See "FestVoxToFreeTTS.sh --help" for more information.

[[[TODO: putting voice data file into FreeTTS.]]]


--------- Files in this directory ---------

FestVoxToFreeTTS.sh:  The bash script that performs the conversion process.
FestVoxClunitsToFreeTTS.scm: Perform the idx stage of the conversion for
            cluster unit voices.
FestVoxDiphoneToFreeTTS.scm: Perform the idx stage of the conversion for
            diphone voices.
FindSTS.java: Generate the sts file for a given recording.  Used by
    FestVoxToFreeTTS.sh
Manifest.txt: Used in compiling FindSTS for generating an executable .jar file.
README: This file.
